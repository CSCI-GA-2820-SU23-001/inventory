name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.11-slim

    # Required services    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
            
      - name: Install libraries for PostgreSQL
        run: |
          apt-get update
          apt-get install -y gcc libpq-dev
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt

    #   - name: Linting
    #     run: |
    #       # stop the build if there are Python syntax errors or undefined names
    #       flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
    #       # test for complexity. The GitHub editor is 127 chars wide
    #       flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
    #       # Run pylint to catch other PEP8 errors
    #       pylint service tests --max-line-length=127

      - name: Run unit tests with green
        run: |
            export FLASK_APP=service:app
            flask db-create
            green
        env:
          DATABASE_URI: "postgresql://postgres:postgres@postgres:5432/postgres"
      
      - name: Upload code coverage
        uses: codecov/codecov-action@v3.1.4
  